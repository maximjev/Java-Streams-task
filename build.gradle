buildscript {
    repositories {
        mavenCentral()
    }
}

def printOutput(def output) {
    return tasks.create("printOutput") {
        for (line in output.toString().readLines()) {
            println "#educational_plugin" + line
        }
    }
}

subprojects {
    apply plugin: 'application'
    apply plugin: 'java'

    sourceCompatibility = 11

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:1.18.8"
        annotationProcessor "org.projectlombok:lombok:1.18.8"
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testImplementation "org.assertj:assertj-core:3.12.2"
    }

    sourceSets {
        main {
            java.srcDir 'src'
        }
        test {
            java.srcDir 'test'
        }
    }

    mainClassName = project.hasProperty("mainClass") ? project.getProperty("mainClass") : ""

    def runOutput = new ByteArrayOutputStream()
    tasks.run.setStandardOutput(runOutput)
    tasks.run.doLast { printOutput(runOutput) }
}

project(':util') {
    dependencies {
        compile group: 'junit', name: 'junit', version: '4.12'
        compileOnly "org.projectlombok:lombok:1.18.8"
        annotationProcessor "org.projectlombok:lombok:1.18.8"
        testImplementation "org.assertj:assertj-core:3.12.2"
    }
}

configure(subprojects.findAll {it.name != 'util'}) {
    dependencies {
        compile project(':util').sourceSets.main.output
        testCompile project(':util').sourceSets.test.output
    }
}
